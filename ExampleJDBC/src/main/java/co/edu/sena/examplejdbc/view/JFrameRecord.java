/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package co.edu.sena.examplejdbc.view;

import co.edu.sena.examplejdbc.controllers.EmployeeController;
import co.edu.sena.examplejdbc.controllers.IEmployeeController;
import co.edu.sena.examplejdbc.controllers.IKeyController;
import co.edu.sena.examplejdbc.controllers.IRecordController;
import co.edu.sena.examplejdbc.controllers.KeyController;
import co.edu.sena.examplejdbc.controllers.RecordController;
import co.edu.sena.examplejdbc.model.Employee;
import co.edu.sena.examplejdbc.model.Key;
import co.edu.sena.examplejdbc.model.Record;
import co.edu.sena.examplejdbc.utils.MessageUtils;
import java.time.LocalDate;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Aprendiz
 */
public class JFrameRecord extends javax.swing.JFrame {
    private IRecordController recordController = new RecordController();
    private IEmployeeController employeeController = new EmployeeController();
    private IKeyController keyController = new KeyController();
    /**
     * Creates new form JFrameRecord
     */
    public JFrameRecord() {
        initComponents();
        fillCombox();
        fillTable();
    }
    
    public void fillCombox(){
        try {
            List <Employee> employeee = employeeController.findAll();
            DefaultComboBoxModel model = new DefaultComboBoxModel();
            jComboBoxEmployeeId.setModel(model);
            model.addAll(employeee);
            
            List <Key> key = keyController.findAll();
            DefaultComboBoxModel model2 = new DefaultComboBoxModel();
            jComboBoxKeyId.setModel(model2);
            model.addAll(employeee);
        } 
        catch (Exception e) {
            MessageUtils.showErrorMessage(e.getMessage());
        }
    }
    
    public void fillTable(){
        try {
            DefaultTableModel model = new DefaultTableModel();
            jTableRecord.setModel(model);
            model.addColumn("Id");
            model.addColumn("Fecha");
            model.addColumn("Hora de inicio");
            model.addColumn("Funcionario");
            model.addColumn("Llave");
            model.addColumn("Estado");
            
            String[] rows = new String[7];
            List <Record> types = recordController.findAll();
            for (Record type : types) {
                rows[0] = String.valueOf(type.getId());
                rows[1] = type.getDate_record();
                rows[2] = type.getStart_time();
                rows[3] = type.getEnd_time();
                rows[4] = type.getEmployee().getFullname();
                rows[5] = type.getKey().getName();
                rows[6] = type.getStatus();
                model.addRow(rows);
            }
        } 
        catch (Exception e) {
            MessageUtils.showErrorMessage(e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelTitle = new javax.swing.JLabel();
        jLabelId = new javax.swing.JLabel();
        jTextFieldId = new javax.swing.JTextField();
        jLabelDate = new javax.swing.JLabel();
        datePickerDate = new com.github.lgooddatepicker.components.DatePicker();
        jLabelStartTime = new javax.swing.JLabel();
        timePickerStartTime = new com.github.lgooddatepicker.components.TimePicker();
        jLabelEndTime = new javax.swing.JLabel();
        timePickerEndTime = new com.github.lgooddatepicker.components.TimePicker();
        jLabelemployeeId = new javax.swing.JLabel();
        jComboBoxEmployeeId = new javax.swing.JComboBox<>();
        jLabelKeyId = new javax.swing.JLabel();
        jComboBoxKeyId = new javax.swing.JComboBox<>();
        jButtonCreate = new javax.swing.JButton();
        jButtonModify = new javax.swing.JButton();
        jButtonDelete = new javax.swing.JButton();
        jButtonClean = new javax.swing.JButton();
        jScrollPaneRecord = new javax.swing.JScrollPane();
        jTableRecord = new javax.swing.JTable();
        jLabelStatus = new javax.swing.JLabel();
        jComboBoxStatus = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabelTitle.setText("Registro");
        jLabelTitle.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N

        jLabelId.setText("Id:");

        jLabelDate.setText("Fecha:");

        jLabelStartTime.setText("Hora inicio:");

        jLabelEndTime.setText("Hora fin:");

        jLabelemployeeId.setText("Funcionario:");

        jLabelKeyId.setText("Llave:");

        jButtonCreate.setText("Crear");
        jButtonCreate.setBackground(new java.awt.Color(0, 204, 0));
        jButtonCreate.setForeground(new java.awt.Color(255, 255, 255));
        jButtonCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCreateActionPerformed(evt);
            }
        });

        jButtonModify.setText("Modificar");
        jButtonModify.setBackground(new java.awt.Color(0, 0, 255));
        jButtonModify.setForeground(new java.awt.Color(255, 255, 255));
        jButtonModify.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonModifyActionPerformed(evt);
            }
        });

        jButtonDelete.setText("Eliminar");
        jButtonDelete.setBackground(new java.awt.Color(255, 51, 51));
        jButtonDelete.setForeground(new java.awt.Color(255, 255, 255));
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });

        jButtonClean.setText("Limpiar");
        jButtonClean.setBackground(new java.awt.Color(102, 102, 102));
        jButtonClean.setForeground(new java.awt.Color(255, 255, 255));
        jButtonClean.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCleanActionPerformed(evt);
            }
        });

        jScrollPaneRecord.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jScrollPaneRecordMouseClicked(evt);
            }
        });

        jTableRecord.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPaneRecord.setViewportView(jTableRecord);
        if (jTableRecord.getColumnModel().getColumnCount() > 0) {
            jTableRecord.getColumnModel().getColumn(0).setHeaderValue("Title 1");
            jTableRecord.getColumnModel().getColumn(1).setHeaderValue("Title 2");
            jTableRecord.getColumnModel().getColumn(2).setHeaderValue("Title 3");
            jTableRecord.getColumnModel().getColumn(3).setHeaderValue("Title 4");
        }

        jLabelStatus.setText("Estado:");

        jComboBoxStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "PENDIENTE", "ENTREGADO", "CANCELADO" }));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/views/home.png"))); // NOI18N
        jLabel1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabelemployeeId)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jComboBoxEmployeeId, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabelStartTime)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(timePickerStartTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jLabelEndTime)))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(timePickerEndTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabelKeyId)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jComboBoxKeyId, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabelStatus)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jComboBoxStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButtonCreate)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonModify)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonDelete)
                                .addGap(36, 36, 36)
                                .addComponent(jButtonClean))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jScrollPaneRecord, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabelId)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldId, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelTitle)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabelDate)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(datePickerDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabelTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelId)
                    .addComponent(jTextFieldId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelDate)
                    .addComponent(datePickerDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelStartTime)
                    .addComponent(timePickerStartTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelEndTime)
                    .addComponent(timePickerEndTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelemployeeId)
                    .addComponent(jComboBoxEmployeeId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelKeyId)
                    .addComponent(jComboBoxKeyId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelStatus)
                    .addComponent(jComboBoxStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonCreate)
                    .addComponent(jButtonModify)
                    .addComponent(jButtonDelete)
                    .addComponent(jButtonClean))
                .addGap(18, 18, 18)
                .addComponent(jScrollPaneRecord, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jScrollPaneRecordMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jScrollPaneRecordMouseClicked
        int rowSelected = jTableRecord.getSelectedRow();
        if(rowSelected != -1)
        {
            long documentSelected = Long.parseLong(jTableRecord.getValueAt(rowSelected, 0).toString());
            try {
  
                jTextFieldId.setText(jTableRecord.getValueAt(rowSelected, 0).toString());
                Record myRecord = recordController.findById(Integer.parseInt(jTextFieldId.getText()));
                datePickerDate.setDate(LocalDate.parse(myRecord.getDate_record()));
                jComboBoxEmployeeId.getModel().setSelectedItem(myRecord.getEmployee());
                jComboBoxKeyId.getModel().setSelectedItem(myRecord.getKey());
                jComboBoxStatus.setSelectedItem(myRecord.getStatus());
                timePickerEndTime.setText(myRecord.getEnd_time() != null ? myRecord.getEnd_time() : null);
                timePickerStartTime.setText(myRecord.getStart_time());
                
                jButtonCreate.setEnabled(false);
                jButtonDelete.setEnabled(true);
                jButtonModify.setEnabled(true);
            } 
            catch (Exception e) {
                MessageUtils.showErrorMessage(e.getMessage());
            }
        }
    }//GEN-LAST:event_jScrollPaneRecordMouseClicked

    private void jButtonCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCreateActionPerformed
        try {
            Record record = new Record();
            record.setDate_record(datePickerDate.getDate().toString());
            record.setStart_time(timePickerStartTime.getTime().toString());
            record.setEnd_time(timePickerEndTime.getTime().toString());
            
            record.setEnd_time(null);
            //FK
            Employee employee = (Employee) jComboBoxEmployeeId.getSelectedItem();
            record.setEmployee(employee);
            Key key = (Key) jComboBoxEmployeeId.getSelectedItem();
            record.setKey(key);
            record.setStatus(jComboBoxStatus.getSelectedItem().toString());
            recordController.insert(record);
            MessageUtils.showInfoMessage("Registro creado exitosamente");
            fillTable();
            clean();
        } 
        catch (Exception e) {
            MessageUtils.showErrorMessage(e.getMessage());
        }
    }//GEN-LAST:event_jButtonCreateActionPerformed

    private void jButtonModifyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonModifyActionPerformed
        try {
            Record record = new Record();
            record.setId(Integer.parseInt(jTextFieldId.getText()));
            record.setDate_record(datePickerDate.getDate().toString());
            record.setStart_time(timePickerStartTime.getTime().toString());
            record.setEnd_time(timePickerEndTime.getTime().toString());
            
            //FK
            Employee employee = (Employee) jComboBoxEmployeeId.getSelectedItem();
            record.setEmployee(employee);
            Key key = (Key) jComboBoxKeyId.getSelectedItem();
            record.setKey(key);
            record.setStatus(jComboBoxStatus.getSelectedItem().toString());
            
            recordController.update(record);
            MessageUtils.showInfoMessage("Registro creado exitosamente");
            fillTable();
            clean();
        } 
        catch (Exception e) {
            MessageUtils.showErrorMessage(e.getMessage());
        }
    }//GEN-LAST:event_jButtonModifyActionPerformed

    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteActionPerformed
        try {
            int option = JOptionPane.showConfirmDialog(rootPane, "Esta seguro de eliminar este registro?",
                                                                    "Confirmacion", JOptionPane.YES_NO_OPTION);
            if(option == JOptionPane.YES_OPTION)
            {
                recordController.delete(Integer.parseInt(jTextFieldId.getText()));
                MessageUtils.showInfoMessage("Registro eliminado exitosamente");
                fillTable();
                clean();
            }
            
        } 
        catch (Exception e) {
            MessageUtils.showErrorMessage(e.getMessage());
        }
    }//GEN-LAST:event_jButtonDeleteActionPerformed

    private void jButtonCleanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCleanActionPerformed
        clean();
    }//GEN-LAST:event_jButtonCleanActionPerformed

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        JFrameHome view = new JFrameHome();
        view.setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_jLabel1MouseClicked

    public void clean(){
        jTextFieldId.setText("");
        jTextFieldId.setText("");
        datePickerDate.setText("");
        timePickerEndTime.setText("");
        timePickerStartTime.setText("");
        jTableRecord.clearSelection();
        jButtonCreate.setEnabled(true);
        jButtonModify.setEnabled(false);
        jButtonDelete.setEnabled(false);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFrameRecord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFrameRecord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFrameRecord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrameRecord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFrameRecord().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.github.lgooddatepicker.components.DatePicker datePickerDate;
    private javax.swing.JButton jButtonClean;
    private javax.swing.JButton jButtonCreate;
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JButton jButtonModify;
    private javax.swing.JComboBox<String> jComboBoxEmployeeId;
    private javax.swing.JComboBox<String> jComboBoxKeyId;
    private javax.swing.JComboBox<String> jComboBoxStatus;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelDate;
    private javax.swing.JLabel jLabelEndTime;
    private javax.swing.JLabel jLabelId;
    private javax.swing.JLabel jLabelKeyId;
    private javax.swing.JLabel jLabelStartTime;
    private javax.swing.JLabel jLabelStatus;
    private javax.swing.JLabel jLabelTitle;
    private javax.swing.JLabel jLabelemployeeId;
    private javax.swing.JScrollPane jScrollPaneRecord;
    private javax.swing.JTable jTableRecord;
    private javax.swing.JTextField jTextFieldId;
    private com.github.lgooddatepicker.components.TimePicker timePickerEndTime;
    private com.github.lgooddatepicker.components.TimePicker timePickerStartTime;
    // End of variables declaration//GEN-END:variables
}
